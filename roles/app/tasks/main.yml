---

- name: install app dependencies
  become: true
  action: >
    apt name={{ item }} state=present update_cache=yes
  with_items:
    - python3
    - python3-dev
    - python3-venv
    - build-essential
    - libffi-dev
    - libssl-dev
    - libmariadbclient-dev
    - libmariadbclient-dev-compat
    - python3-sqlparse # FIXME: see zestedesavoir/zds-site#4868

- name: should have a {{ appuser }} user
  become: true
  user:
    name: "{{ appuser }}"
    shell: /bin/false
    home: "{{ workdir }}"
    comment: "Zeste de Savoir"

- name: create the needed directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ appuser }}"
    group: "{{ appuser }}"
  with_items:
    - "{{ logdir }}"
    - "{{ workdir }}"
    - "{{ appdir }}"
    - "{{ rundir }}"
    - "{{ datadir }}"
    - "{{ datadir }}/contents-private"
    - "{{ datadir }}/contents-public"
    - "{{ datadir }}/media"
    - "{{ datadir }}/static"

- name: checkout the application
  become: true
  become_user: "{{ appuser }}"
  git:
    repo: "https://github.com/zestedesavoir/zds-site.git"
    dest: "{{ appdir }}"
    version: "{{ appversion }}-build"
  register: app

- name: symlink data folders
  become: true
  become_user: "{{ appuser }}"
  file:
    src: "{{ datadir }}/{{ item }}"
    dest: "{{ appdir }}/{{ item }}"
    state: link
  with_items:
    - contents-private
    - contents-public
    - media
    - static

- name: install wheel in virtualenv
  become: true
  become_user: "{{ appuser }}"
  pip:
    name: wheel
    virtualenv: "{{ virtualenv }}"
    virtualenv_command: /usr/bin/pyvenv

- name: install requirements in virtualenv
  become: true
  become_user: "{{ appuser }}"
  pip:
    requirements: "{{ appdir }}/requirements-prod.txt"
    virtualenv: "{{ virtualenv }}"
    virtualenv_command: /usr/bin/pyvenv
  when: app.changed

- name: save wrapper script
  become: true
  become_user: "{{ appuser }}"
  template:
    src: templates/wrapper.j2
    dest: "{{ workdir }}/wrapper"
    mode: '0755'

- name: create unit files
  template:
    src: templates/{{ item }}.j2
    dest: "/etc/systemd/system/{{ item }}"
  with_items:
    - zds.service
    - zds.socket
    - zds-es-index.service
    - zds-es-index.timer
    - zds-watchdog.service

- name: create app config file
  become: true
  become_user: "{{ appuser }}"
  template:
    src: templates/config.toml.j2
    dest: "{{ workdir }}/config.toml"

- name: collect static files
  become: true
  become_user: "{{ appuser }}"
  environment:
    DJANGO_SETTINGS_MODULE: "zds.settings.{{ env }}"
    ZDS_CONFIG: "{{ workdir }}/config.toml"
  django_manage:
    app_path: "{{ appdir }}"
    virtualenv: "{{ virtualenv }}"
    command: collectstatic
  when: app.changed

- name: migrate database
  become: true
  become_user: "{{ appuser }}"
  environment:
    DJANGO_SETTINGS_MODULE: "zds.settings.{{ env }}"
    ZDS_CONFIG: "{{ workdir }}/config.toml"
  django_manage:
    app_path: "{{ appdir }}"
    virtualenv: "{{ virtualenv }}"
    command: migrate
  when: app.changed

- name: start services and timers
  systemd:
    state: started
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
  with_items:
    - zds.service
    - zds.socket
    - zds-es-index.timer
    - zds-watchdog.service
